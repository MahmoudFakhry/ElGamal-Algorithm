Notebook[{Cell[CellGroupData[{Cell[BoxData[{RowBox[{RowBox[{"(*", " ", RowBox[{"===", "===", "===", "===", "===", "===", "==="}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{"Part", " ", "I", " ", "of", " ", RowBox[{"III", ":", " ", RowBox[{"ElGamal", " ", "Algorithm"}]}]}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{"===", "===", "===", "===", "===", "===", "==="}], " ", "*)"}], "\.0a", "\.0a", RowBox[{RowBox[{RowBox[{"AliceKeyGeneration", "[", RowBox[{"p_", ",", "g_", ",", "e_", ",", "a_"}], "]"}], " ", ":=", " ", RowBox[{"Module", "[", RowBox[{RowBox[{"{", RowBox[{"arr", ",", "PublicKey", ",", "rand", ",", "len"}], "}"}], ",", "\.0a", RowBox[{RowBox[{"Print", "[", "\"== Alice (Reciever) ==\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Calling function AliceKeyGeneration...\"", "]"}], ";", "\.0a", RowBox[{"p", " ", "=", " ", RowBox[{"RandomPrime", "[", RowBox[{"{", RowBox[{"10000", ",", "100000"}], "}"}], "]"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{"Note", ":", " ", RowBox[{"Pseudorandom", " ", "is", " ", "used"}]}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{RowBox[{"Note", ":", " ", RowBox[{"Large", " ", "primes", " ", "should", " ", "be", " ", "generated", " ", "for", " ", "best", " ", "security"}]}], ",", RowBox[{"with", " ", "hundreds", " ", "or", " ", "thousands", " ", "of", " ", "digits"}], " ", "\:2013", " ", "here", ",", " ", RowBox[{"we", " ", RowBox[{"won", "'"}], "t", " ", "do", " ", RowBox[{"that", "."}]}]}], " ", "*)"}], " ", "\.0a", "\.0a", RowBox[{"arr", " ", "=", " ", RowBox[{"PrimitiveRootList", "[", "p", "]"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{"Finds", " ", "array", " ", "of", " ", "all", " ", "primitive", " ", "roots", " ", "of", " ", "p"}], " ", "*)"}], "\.0a", RowBox[{"len", " ", "=", " ", RowBox[{"Length", "[", "arr", "]"}]}], ";", " ", RowBox[{"rand", " ", "=", " ", RowBox[{"RandomInteger", "[", "len", "]"}]}], ";", "\.0a", RowBox[{"g", " ", "=", " ", RowBox[{"arr", "[", RowBox[{"[", "rand", "]"}], "]"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{"Takes", " ", "random", " ", "primitive", " ", "root", " ", "of", " ", "p"}], " ", "*)"}], "\.0a", RowBox[{"a", " ", "=", " ", RowBox[{"RandomInteger", "[", RowBox[{"{", RowBox[{"1", ",", RowBox[{"p", "-", "2"}]}], "}"}], "]"}]}], ";", " ", RowBox[{"(*", RowBox[{" ", RowBox[{"Random", " ", "Int", " ", "in", " ", RowBox[{"Range", ":", " ", RowBox[{"[", RowBox[{"1", ",", " ", RowBox[{"p", "-", "1"}]}]}]}]}], ")"}], " ", "*)"}], "\.0a", RowBox[{"e", " ", "=", " ", RowBox[{"PowerMod", "[", RowBox[{"g", ",", "a", ",", "p"}], "]"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{"Computes", " ", "\"g ^ a (mod p)\""}], " ", "*)"}], "\.0a", "          ", "\.0a", RowBox[{"(*", " ", RowBox[{"Now", ",", " ", RowBox[{"values", " ", RowBox[{"(", RowBox[{"p", ",", "g", ",", "e"}], ")"}], " ", "public"}]}], " ", "*)"}], "\.0a", RowBox[{"PublicKey", " ", "=", " ", RowBox[{"{", RowBox[{"p", ",", "g", ",", "e"}], "}"}]}], ";", "\.0a", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", RowBox[{"\"Public Keys (p, g, e) generated: \"", ",", " ", "PublicKey"}], "]"}], ";", "\.0a", RowBox[{"Print", "[", RowBox[{"p", ",", "\" is random prime p, \"", ",", "g", ",", " ", "\" is random primitive root of p, \"", ",", "e", ",", " ", "\" is found with: e \:2261 g^a (mod p)\""}], "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Note: Alice also used private random integer value a, where a is 1 <= a < p - 1\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", RowBox[{"Return", " ", "[", "PublicKey", "]"}], ";"}]}], "\.0a", "]"}]}], ";"}]}], RowBox[{"\.0a", "\.0a"}], RowBox[{RowBox[{RowBox[{"BobEncryption", "[", RowBox[{"p_", ",", "g_", ",", "e_"}], "]"}], " ", ":=", " ", RowBox[{"Module", "[", RowBox[{RowBox[{"{", RowBox[{"m", ",", "b", ",", "c1", ",", "c2", ",", "PublicDecrypt"}], "}"}], ",", "\.0a", RowBox[{RowBox[{"Print", "[", "\"== Bob (Sender) ==\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Calling function BobEncryption...\"", "]"}], ";", "\.0a", RowBox[{"m", " ", "=", " ", "999"}], ";", " ", RowBox[{"(*", " ", RowBox[{RowBox[{"Bob", " ", "has", " ", "access", " ", "to", " ", "the", " ", "Original", " ", "Text"}], ",", " ", "m"}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{RowBox[{"M", " ", "is", " ", "the", " ", "Plaintext"}], ",", " ", RowBox[{"which", " ", "Bob", " ", "will", " ", "convert", " ", "to", " ", RowBox[{"Ciphertext", "."}]}]}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{"Note", ":", " ", RowBox[{"m", " ", "<", " ", "p"}]}], " ", "*)"}], "\.0a", "\.0a", RowBox[{"b", " ", "=", " ", RowBox[{"RandomInteger", "[", RowBox[{"{", RowBox[{"1", ",", " ", RowBox[{"p", "-", "2"}]}], "}"}], "]"}]}], ";", " ", RowBox[{"(*", RowBox[{" ", RowBox[{"Random", " ", "Int", " ", "in", " ", RowBox[{"Range", ":", " ", RowBox[{"[", RowBox[{"1", ",", " ", RowBox[{"p", "-", "1"}]}]}]}]}], ")"}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{"C1", " ", "and", " ", "C2", " ", "are", " ", "Ciphertext", " ", RowBox[{RowBox[{"(", RowBox[{"public", " ", "values"}], ")"}], "."}]}], " ", "*)"}], " ", "\.0a", RowBox[{"c1", " ", "=", " ", RowBox[{"PowerMod", "[", RowBox[{"g", ",", "b", ",", "p"}], "]"}]}], ";", " ", RowBox[{"c2", " ", "=", " ", RowBox[{"Mod", "[", RowBox[{RowBox[{"m", "*", RowBox[{"(", RowBox[{"e", "^", "b"}], ")"}]}], ",", "p"}], "]"}]}], ";", "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"Now", ",", " ", RowBox[{"values", " ", RowBox[{"(", RowBox[{"c1", ",", "c2"}], ")"}], " ", "public"}]}], " ", "*)"}], "\.0a", RowBox[{"PublicDecrypt", " ", "=", " ", RowBox[{"{", RowBox[{"c1", ",", " ", "c2"}], "}"}]}], ";", "\.0a", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Bob now uing values p, g, e to calculate Ciphertext values c1, c2.\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", RowBox[{"\"Ciphertext (c1, c2) generated: \"", ",", " ", "PublicDecrypt"}], "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Note: Bob also used private random integer value b, where b is 1 <= b < p - 1\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Also: Bob is the sender, so Bob has access to M, the Plaintext\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", "\.0a", RowBox[{"Return", " ", "[", "PublicDecrypt", "]"}], ";"}]}], "\.0a", "]"}]}], ";"}], RowBox[{"\.0a", "\.0a"}], RowBox[{RowBox[{RowBox[{"AliceDecryption", "[", RowBox[{"p_", ",", "g_", ",", "e_", ",", "a_", ",", "c1_", ",", "c2_"}], "]"}], " ", ":=", " ", RowBox[{"Module", "[", RowBox[{RowBox[{"{", RowBox[{"x", ",", " ", "Original"}], "}"}], ",", "\.0a", RowBox[{RowBox[{"Print", "[", "\"== Alice (Reciever) ==\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Calling function AliceDecryption...\"", "]"}], ";", "\.0a", RowBox[{"x", " ", "=", " ", RowBox[{"PowerMod", "[", RowBox[{"c1", ",", " ", "a", ",", " ", "p"}], "]"}]}], ";", "\.0a", RowBox[{"Original", " ", "=", " ", RowBox[{"Mod", "[", RowBox[{RowBox[{"c2", "*", RowBox[{"(", RowBox[{"x", "^", RowBox[{"(", RowBox[{"p", "-", "2"}], ")"}]}], ")"}]}], ",", "p"}], "]"}]}], ";", "\.0a", "\.0a", RowBox[{"Print", "[", "\"Using public values (as well as Alice's private value a), Alice now has Original Plaintext M found:\"", "]"}], ";", "\.0a", RowBox[{"Return", " ", "[", "Original", "]"}], ";"}]}], "\.0a", "]"}]}], ";"}], RowBox[{"\.0a", "\.0a"}], RowBox[{RowBox[{RowBox[{"ElGamal", "[", "]"}], " ", ":=", " ", RowBox[{"Module", "[", RowBox[{RowBox[{"{", RowBox[{"p", ",", "g", ",", "a", ",", "e", ",", "arr", ",", "PublicKey", ",", "Ciphertext", ",", "Original", ",", "rand", ",", "len", ",", "Alice", ",", "Bob", ",", "m", ",", "b", ",", "c1", ",", "c2"}], "}"}], ",", "\.0a", RowBox[{RowBox[{"PublicKey", " ", "=", " ", RowBox[{"{", RowBox[{"p", ",", "g", ",", "e"}], "}"}]}], ";", " ", RowBox[{"Ciphertext", " ", "=", " ", RowBox[{"{", RowBox[{"c1", ",", "c2"}], "}"}]}], ";", " ", "\.0a", RowBox[{"(*", " ", RowBox[{"All", " ", RowBox[{"Alice", "'"}], "s", " ", "values"}], " ", "*)"}], "\.0a", RowBox[{"Alice", " ", "=", " ", RowBox[{"{", RowBox[{"p", ",", "g", ",", "e", ",", "a"}], "}"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{RowBox[{RowBox[{"Public", " ", RowBox[{"(", "\"keys\"", ")"}]}], ":", " ", "p"}], ",", "g", ",", RowBox[{"e", ";", " ", RowBox[{"Private", ":", " ", "a"}]}]}], " ", "*)"}], "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{RowBox[{"All", " ", RowBox[{"Bob", "'"}], "s", " ", "values"}], " ", "\:2013", " ", RowBox[{"\"m\"", " ", "is", " ", "plaintext"}]}], "*)"}], "\.0a", RowBox[{"Bob", " ", "=", " ", RowBox[{"{", RowBox[{"c1", ",", "c2", ",", "m", ",", "b"}], "}"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{RowBox[{RowBox[{"Public", RowBox[{"(", "\"cyphertext\"", ")"}]}], ":", " ", "c1"}], ",", RowBox[{"c2", ";", " ", RowBox[{"Private", ":", " ", "m"}]}], ",", "b"}], " ", "*)"}], "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"Alice", " ", "generates", " ", "public", " ", "keys", " ", RowBox[{"(", RowBox[{"p", ",", "g", ",", "e"}], ")"}]}], " ", "*)"}], "\.0a", RowBox[{"PublicKey", " ", "=", " ", RowBox[{"AliceKeyGeneration", "[", RowBox[{"p", ",", "g", ",", "e", ",", "a"}], "]"}]}], ";", "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"Bob", " ", "generates", " ", "public", " ", "ciphertext", " ", RowBox[{"(", RowBox[{"c1", ",", "c2"}], ")"}]}], " ", "*)"}], "\.0a", RowBox[{"Ciphertext", " ", "=", " ", RowBox[{"BobEncryption", "[", RowBox[{"p", ",", "g", ",", "e"}], "]"}]}], ";", "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"Alice", " ", "generates", " ", "original", " ", "plaintext", " ", "M", " ", "using", " ", RowBox[{"(", RowBox[{"c1", ",", "c2"}], ")"}]}], " ", "*)"}], "\.0a", RowBox[{"Original", " ", "=", " ", RowBox[{"AliceDecryption", "[", RowBox[{"p", ",", "g", ",", "e", ",", "a", ",", RowBox[{"Ciphertext", "[", RowBox[{"[", "1", "]"}], "]"}], ",", RowBox[{"Ciphertext", "[", RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", "\.0a", "\.0a", RowBox[{"Return", "[", "Original", "]"}], ";"}]}], "\.0a", "]"}]}], ";"}], RowBox[{"\.0a", "\.0a"}], RowBox[{RowBox[{RowBox[{"AliceKeyGeneration", "[", RowBox[{"p_", ",", "g_", ",", "e_", ",", "a_"}], "]"}], " ", ":=", " ", RowBox[{"Module", "[", RowBox[{RowBox[{"{", RowBox[{"arr", ",", "PublicKey", ",", "rand", ",", "len"}], "}"}], ",", "\.0a", RowBox[{RowBox[{"Print", "[", "\"== Alice (Reciever) ==\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Calling function AliceKeyGeneration...\"", "]"}], ";", "\.0a", RowBox[{"p", " ", "=", " ", RowBox[{"RandomPrime", "[", RowBox[{"{", RowBox[{"10000", ",", "100000"}], "}"}], "]"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{"Note", ":", " ", RowBox[{"Pseudorandom", " ", "is", " ", "used"}]}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{RowBox[{"Note", ":", " ", RowBox[{"Large", " ", "primes", " ", "should", " ", "be", " ", "generated", " ", "for", " ", "best", " ", "security"}]}], ",", RowBox[{"with", " ", "hundreds", " ", "or", " ", "thousands", " ", "of", " ", "digits"}], " ", "\:2013", " ", "here", ",", " ", RowBox[{"we", " ", RowBox[{"won", "'"}], "t", " ", "do", " ", RowBox[{"that", "."}]}]}], " ", "*)"}], " ", "\.0a", "\.0a", RowBox[{"arr", " ", "=", " ", RowBox[{"PrimitiveRootList", "[", "p", "]"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{"Finds", " ", "array", " ", "of", " ", "all", " ", "primitive", " ", "roots", " ", "of", " ", "p"}], " ", "*)"}], "\.0a", RowBox[{"len", " ", "=", " ", RowBox[{"Length", "[", "arr", "]"}]}], ";", " ", RowBox[{"rand", " ", "=", " ", RowBox[{"RandomInteger", "[", "len", "]"}]}], ";", "\.0a", RowBox[{"g", " ", "=", " ", RowBox[{"arr", "[", RowBox[{"[", "rand", "]"}], "]"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{"Takes", " ", "random", " ", "primitive", " ", "root", " ", "of", " ", "p"}], " ", "*)"}], "\.0a", RowBox[{"a", " ", "=", " ", RowBox[{"RandomInteger", "[", RowBox[{"{", RowBox[{"1", ",", RowBox[{"p", "-", "2"}]}], "}"}], "]"}]}], ";", " ", RowBox[{"(*", RowBox[{" ", RowBox[{"Random", " ", "Int", " ", "in", " ", RowBox[{"Range", ":", " ", RowBox[{"[", RowBox[{"1", ",", " ", RowBox[{"p", "-", "1"}]}]}]}]}], ")"}], " ", "*)"}], "\.0a", RowBox[{"e", " ", "=", " ", RowBox[{"PowerMod", "[", RowBox[{"g", ",", "a", ",", "p"}], "]"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{"Computes", " ", "\"g ^ a (mod p)\""}], " ", "*)"}], "\.0a", "          ", "\.0a", RowBox[{"(*", " ", RowBox[{"Now", ",", " ", RowBox[{"values", " ", RowBox[{"(", RowBox[{"p", ",", "g", ",", "e"}], ")"}], " ", "public"}]}], " ", "*)"}], "\.0a", RowBox[{"PublicKey", " ", "=", " ", RowBox[{"{", RowBox[{"p", ",", "g", ",", "e"}], "}"}]}], ";", "\.0a", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", RowBox[{"\"Public Keys (p, g, e) generated: \"", ",", " ", "PublicKey"}], "]"}], ";", "\.0a", RowBox[{"Print", "[", RowBox[{"p", ",", "\" is random prime p, \"", ",", "g", ",", " ", "\" is random primitive root of p, \"", ",", "e", ",", " ", "\" is found with: e \:2261 g^a (mod p)\""}], "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Note: Alice also used private random integer value a, where a is 1 <= a < p - 1\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", RowBox[{"Return", " ", "[", "PublicKey", "]"}], ";"}]}], "\.0a", "]"}]}], ";"}], RowBox[{"\.0a", "\.0a"}], RowBox[{RowBox[{RowBox[{"BobEncryption", "[", RowBox[{"p_", ",", "g_", ",", "e_"}], "]"}], " ", ":=", " ", RowBox[{"Module", "[", RowBox[{RowBox[{"{", RowBox[{"m", ",", "b", ",", "c1", ",", "c2", ",", "PublicDecrypt"}], "}"}], ",", "\.0a", RowBox[{RowBox[{"Print", "[", "\"== Bob (Sender) ==\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Calling function BobEncryption...\"", "]"}], ";", "\.0a", RowBox[{"m", " ", "=", " ", "999"}], ";", " ", RowBox[{"(*", " ", RowBox[{RowBox[{"Bob", " ", "has", " ", "access", " ", "to", " ", "the", " ", "Original", " ", "Text"}], ",", " ", "m"}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{RowBox[{"M", " ", "is", " ", "the", " ", "Plaintext"}], ",", " ", RowBox[{"which", " ", "Bob", " ", "will", " ", "convert", " ", "to", " ", RowBox[{"Ciphertext", "."}]}]}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{"Note", ":", " ", RowBox[{"m", " ", "<", " ", "p"}]}], " ", "*)"}], "\.0a", "\.0a", RowBox[{"b", " ", "=", " ", RowBox[{"RandomInteger", "[", RowBox[{"{", RowBox[{"1", ",", " ", RowBox[{"p", "-", "2"}]}], "}"}], "]"}]}], ";", " ", RowBox[{"(*", RowBox[{" ", RowBox[{"Random", " ", "Int", " ", "in", " ", RowBox[{"Range", ":", " ", RowBox[{"[", RowBox[{"1", ",", " ", RowBox[{"p", "-", "1"}]}]}]}]}], ")"}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{"C1", " ", "and", " ", "C2", " ", "are", " ", "Ciphertext", " ", RowBox[{RowBox[{"(", RowBox[{"public", " ", "values"}], ")"}], "."}]}], " ", "*)"}], " ", "\.0a", RowBox[{"c1", " ", "=", " ", RowBox[{"PowerMod", "[", RowBox[{"g", ",", "b", ",", "p"}], "]"}]}], ";", " ", RowBox[{"c2", " ", "=", " ", RowBox[{"Mod", "[", RowBox[{RowBox[{"m", "*", RowBox[{"(", RowBox[{"e", "^", "b"}], ")"}]}], ",", "p"}], "]"}]}], ";", "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"Now", ",", " ", RowBox[{"values", " ", RowBox[{"(", RowBox[{"c1", ",", "c2"}], ")"}], " ", "public"}]}], " ", "*)"}], "\.0a", RowBox[{"PublicDecrypt", " ", "=", " ", RowBox[{"{", RowBox[{"c1", ",", " ", "c2"}], "}"}]}], ";", "\.0a", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Bob now uing values p, g, e to calculate Ciphertext values c1, c2.\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", RowBox[{"\"Ciphertext (c1, c2) generated: \"", ",", " ", "PublicDecrypt"}], "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Note: Bob also used private random integer value b, where b is 1 <= b < p - 1\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Also: Bob is the sender, so Bob has access to M, the Plaintext\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", "\.0a", RowBox[{"Return", " ", "[", "PublicDecrypt", "]"}], ";"}]}], "\.0a", "]"}]}], ";"}], RowBox[{"\.0a", "\.0a"}], RowBox[{RowBox[{RowBox[{"AliceDecryption", "[", RowBox[{"p_", ",", "g_", ",", "e_", ",", "a_", ",", "c1_", ",", "c2_"}], "]"}], " ", ":=", " ", RowBox[{"Module", "[", RowBox[{RowBox[{"{", RowBox[{"x", ",", " ", "Original"}], "}"}], ",", "\.0a", RowBox[{RowBox[{"Print", "[", "\"== Alice (Reciever) ==\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Calling function AliceDecryption...\"", "]"}], ";", "\.0a", RowBox[{"x", " ", "=", " ", RowBox[{"PowerMod", "[", RowBox[{"c1", ",", " ", "a", ",", " ", "p"}], "]"}]}], ";", "\.0a", RowBox[{"Original", " ", "=", " ", RowBox[{"Mod", "[", RowBox[{RowBox[{"c2", "*", RowBox[{"(", RowBox[{"x", "^", RowBox[{"(", RowBox[{"p", "-", "2"}], ")"}]}], ")"}]}], ",", "p"}], "]"}]}], ";", "\.0a", "\.0a", RowBox[{"Print", "[", "\"Using public values (as well as Alice's private value a), Alice now has Original Plaintext M found:\"", "]"}], ";", "\.0a", RowBox[{"Return", " ", "[", "Original", "]"}], ";"}]}], "\.0a", "]"}]}], ";"}], RowBox[{"\.0a", "\.0a"}], RowBox[{RowBox[{RowBox[{"ElGamal", "[", "]"}], " ", ":=", " ", RowBox[{"Module", "[", RowBox[{RowBox[{"{", RowBox[{"p", ",", "g", ",", "a", ",", "e", ",", "arr", ",", "PublicKey", ",", "Ciphertext", ",", "Original", ",", "rand", ",", "len", ",", "Alice", ",", "Bob", ",", "m", ",", "b", ",", "c1", ",", "c2"}], "}"}], ",", "\.0a", RowBox[{RowBox[{"PublicKey", " ", "=", " ", RowBox[{"{", RowBox[{"p", ",", "g", ",", "e"}], "}"}]}], ";", " ", RowBox[{"Ciphertext", " ", "=", " ", RowBox[{"{", RowBox[{"c1", ",", "c2"}], "}"}]}], ";", " ", "\.0a", RowBox[{"(*", " ", RowBox[{"All", " ", RowBox[{"Alice", "'"}], "s", " ", "values"}], " ", "*)"}], "\.0a", RowBox[{"Alice", " ", "=", " ", RowBox[{"{", RowBox[{"p", ",", "g", ",", "e", ",", "a"}], "}"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{RowBox[{RowBox[{"Public", " ", RowBox[{"(", "\"keys\"", ")"}]}], ":", " ", "p"}], ",", "g", ",", RowBox[{"e", ";", " ", RowBox[{"Private", ":", " ", "a"}]}]}], " ", "*)"}], "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{RowBox[{"All", " ", RowBox[{"Bob", "'"}], "s", " ", "values"}], " ", "\:2013", " ", RowBox[{"\"m\"", " ", "is", " ", "plaintext"}]}], "*)"}], "\.0a", RowBox[{"Bob", " ", "=", " ", RowBox[{"{", RowBox[{"c1", ",", "c2", ",", "m", ",", "b"}], "}"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{RowBox[{RowBox[{"Public", RowBox[{"(", "\"cyphertext\"", ")"}]}], ":", " ", "c1"}], ",", RowBox[{"c2", ";", " ", RowBox[{"Private", ":", " ", "m"}]}], ",", "b"}], " ", "*)"}], "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"Alice", " ", "generates", " ", "public", " ", "keys", " ", RowBox[{"(", RowBox[{"p", ",", "g", ",", "e"}], ")"}]}], " ", "*)"}], "\.0a", RowBox[{"PublicKey", " ", "=", " ", RowBox[{"AliceKeyGeneration", "[", RowBox[{"p", ",", "g", ",", "e", ",", "a"}], "]"}]}], ";", "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"Bob", " ", "generates", " ", "public", " ", "ciphertext", " ", RowBox[{"(", RowBox[{"c1", ",", "c2"}], ")"}]}], " ", "*)"}], "\.0a", RowBox[{"Ciphertext", " ", "=", " ", RowBox[{"BobEncryption", "[", RowBox[{"p", ",", "g", ",", "e"}], "]"}]}], ";", "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"Alice", " ", "generates", " ", "original", " ", "plaintext", " ", "M", " ", "using", " ", RowBox[{"(", RowBox[{"c1", ",", "c2"}], ")"}]}], " ", "*)"}], "\.0a", RowBox[{"Original", " ", "=", " ", RowBox[{"AliceDecryption", "[", RowBox[{"p", ",", "g", ",", "e", ",", "a", ",", RowBox[{"Ciphertext", "[", RowBox[{"[", "1", "]"}], "]"}], ",", RowBox[{"Ciphertext", "[", RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", "\.0a", "\.0a", RowBox[{"Return", "[", "Original", "]"}], ";"}]}], "\.0a", "]"}]}], ";"}], RowBox[{"\.0a", "\.0a"}], RowBox[{RowBox[{"(*", " ", RowBox[{RowBox[{"Press", " ", "\"enter\"", " ", "to", " ", "see", " ", "ElGamal", " ", "Algorithm", " ", "find", " ", "Plaintext", " ", "M"}], "=", "999."}], " ", "*)"}], "\.0a", RowBox[{"ElGamal", "[", "]"}]}]}], "Input", CellLabel -> "In[207]:= ", ExpressionUUID -> "17f4b907-a628-40e8-a547-d295f18ae22a"], Cell[BoxData["\"== Alice (Reciever) ==\"", StandardForm], "Print", ExpressionUUID -> "841d6fcd-37db-4887-8439-8f0b09c900f1"], Cell[BoxData["\"Calling function AliceKeyGeneration...\"", StandardForm], "Print", ExpressionUUID -> "24673ad0-3ac4-43fc-9f27-7a3b3b702a74"], Cell[BoxData["\"___\"", StandardForm], "Print", ExpressionUUID -> "36b0e2f7-ee18-4c47-b764-4315f23764d1"], Cell[BoxData[InterpretationBox[RowBox[{"\"Public Keys (p, g, e) generated: \"", "\:f360", RowBox[{"{", RowBox[{"23473", ",", "17022", ",", "5694"}], "}"}]}], SequenceForm["Public Keys (p, g, e) generated: ", {23473, 17022, 5694}], Editable -> False], StandardForm], "Print", ExpressionUUID -> "05900f7b-3a21-4b0a-8cce-9e53c3c66565"], Cell[BoxData[InterpretationBox[RowBox[{"23473", "\:f360", "\" is random prime p, \"", "\:f360", "17022", "\:f360", "\" is random primitive root of p, \"", "\:f360", "5694", "\:f360", "\" is found with: e \:2261 g^a (mod p)\""}], SequenceForm[23473, " is random prime p, ", 17022, " is random primitive root of p, ", 5694, " is found with: e \:2261 g^a (mod p)"], Editable -> False], StandardForm], "Print", ExpressionUUID -> "e4e686da-ab0b-4a34-90ca-0f36b5f59408"], Cell[BoxData["\"Note: Alice also used private random integer value a, where a is 1 <= a < p - 1\"", StandardForm], "Print", ExpressionUUID -> "e630dda0-5048-4cdd-a0bf-1fb030e7d24e"], Cell[BoxData["\"___\"", StandardForm], "Print", ExpressionUUID -> "ee8d8a88-e07c-48af-9801-d6b0892acd83"], Cell[BoxData["\"== Bob (Sender) ==\"", StandardForm], "Print", ExpressionUUID -> "17f88e62-8fa1-4ffd-8af4-baeeaeebef06"], Cell[BoxData["\"Calling function BobEncryption...\"", StandardForm], "Print", ExpressionUUID -> "939b31fe-b323-4c47-a2df-ba0a8f651131"], Cell[BoxData["\"___\"", StandardForm], "Print", ExpressionUUID -> "633d9d39-cf9d-4d27-86b5-9e3137d24bb5"], Cell[BoxData["\"Bob now uing values p, g, e to calculate Ciphertext values c1, c2.\"", StandardForm], "Print", ExpressionUUID -> "e8debe10-f166-4643-9ca4-94bbb963f5c4"], Cell[BoxData[InterpretationBox[RowBox[{"\"Ciphertext (c1, c2) generated: \"", "\:f360", RowBox[{"{", RowBox[{"7012", ",", "11482"}], "}"}]}], SequenceForm["Ciphertext (c1, c2) generated: ", {7012, 11482}], Editable -> False], StandardForm], "Print", ExpressionUUID -> "41514fe8-406f-451b-bece-43d60b02e413"], Cell[BoxData["\"Note: Bob also used private random integer value b, where b is 1 <= b < p - 1\"", StandardForm], "Print", ExpressionUUID -> "11c784b8-8ba5-4717-bb59-f01bcf8226af"], Cell[BoxData["\"Also: Bob is the sender, so Bob has access to M, the Plaintext\"", StandardForm], "Print", ExpressionUUID -> "87a4343b-9a62-46d0-993e-90f7a3ac3b15"], Cell[BoxData["\"___\"", StandardForm], "Print", ExpressionUUID -> "71bb4259-979c-4deb-b52f-fe78eb8439c8"], Cell[BoxData["\"== Alice (Reciever) ==\"", StandardForm], "Print", ExpressionUUID -> "4e92a748-fe2b-4eb7-8190-f70bbe00f34e"], Cell[BoxData["\"Calling function AliceDecryption...\"", StandardForm], "Print", ExpressionUUID -> "f22cf853-dd3c-4c9a-8363-758981616769"], Cell[BoxData["\"Using public values (as well as Alice's private value a), Alice now has Original Plaintext M found:\"", StandardForm], "Print", ExpressionUUID -> "cc10c33b-bce7-4d34-a2d8-40f2508aeccc"], Cell[BoxData["999", StandardForm], "Output", CellLabel -> "Out[215]= ", ExpressionUUID -> "63f58ea6-e05c-4ca0-92d0-62280159dd3e"]}, Open], ExpressionUUID -> "ab78d7f5-c62d-4d58-8e28-85202a3c21f1"], Cell[BoxData[RowBox[{"\.0a", RowBox[{"(*", " ", RowBox[{"===", "===", "===", "===", "===", "===", "==="}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{"Part", " ", "II", " ", "of", " ", RowBox[{"III", ":", " ", RowBox[{"DHKE", " ", "Algorithm"}]}]}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{"===", "===", "===", "===", "===", "===", "==="}], " ", "*)"}], "\.0a"}]], "Input", ExpressionUUID -> "80fb4aaf-db0a-44c7-8050-d21900c9aae6"], Cell[BoxData[{RowBox[{RowBox[{RowBox[{"AliceStep1", "[", RowBox[{"p_", ",", "g_", ",", "e_", ",", "a_"}], "]"}], " ", ":=", " ", RowBox[{"Module", "[", RowBox[{RowBox[{"{", RowBox[{"arr", ",", "PublicKey", ",", "rand", ",", "len"}], "}"}], ",", "\.0a", RowBox[{RowBox[{"Print", "[", "\"== Alice (Reciever) ==\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Calling function AliceStep1...\"", "]"}], ";", "\.0a", "\.0a", RowBox[{"a", " ", "=", " ", RowBox[{"RandomInteger", "[", RowBox[{"{", RowBox[{"1", ",", "p"}], "}"}], "]"}]}], ";", " ", RowBox[{"(*", RowBox[{" ", RowBox[{"Random", " ", "Int", " ", "in", " ", RowBox[{"Range", ":", " ", RowBox[{"[", RowBox[{"1", ",", " ", "p"}]}]}]}], ")"}], " ", "*)"}], "\.0a", RowBox[{"e", " ", "=", " ", RowBox[{"PowerMod", "[", RowBox[{"g", ",", "a", ",", "p"}], "]"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{"Computes", " ", "\"g ^ a (mod p)\""}], " ", "*)"}], "\.0a", "          ", "\.0a", RowBox[{"(*", " ", RowBox[{"Now", ",", " ", RowBox[{"values", " ", RowBox[{"(", RowBox[{"p", ",", "g", ",", "e"}], ")"}], " ", "public"}]}], " ", "*)"}], "\.0a", RowBox[{"PublicKey", " ", "=", " ", "e"}], ";", "\.0a", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", RowBox[{"\"Public Key (e) generated: \"", ",", " ", "PublicKey"}], "]"}], ";", "\.0a", RowBox[{"Print", "[", RowBox[{"e", ",", " ", "\" is found with: e \:2261 g^a (mod p)\""}], "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Note: Alice also used private random integer value a, where a is 1 \:2264 a < p\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", RowBox[{"Return", " ", "[", "PublicKey", "]"}], ";"}]}], "\.0a", "]"}]}], ";"}], RowBox[{"\.0a", "\.0a"}], RowBox[{RowBox[{RowBox[{"BobStep2", "[", RowBox[{"p_", ",", "g_", ",", "e_"}], "]"}], " ", ":=", " ", RowBox[{"Module", "[", RowBox[{RowBox[{"{", RowBox[{"b", ",", "c1", ",", "Key", ",", "BobValues"}], "}"}], ",", "\.0a", RowBox[{RowBox[{"Print", "[", "\"== Bob (Sender) ==\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Calling function BobStep2...\"", "]"}], ";", "\.0a", "\.0a", RowBox[{"b", " ", "=", " ", RowBox[{"RandomInteger", "[", RowBox[{"{", RowBox[{"1", ",", " ", RowBox[{"p", "-", "1"}]}], "}"}], "]"}]}], ";", " ", RowBox[{"(*", RowBox[{" ", RowBox[{"Random", " ", "Int", " ", "in", " ", RowBox[{"Range", ":", " ", RowBox[{"[", RowBox[{"1", ",", " ", "p"}]}]}]}], ")"}], " ", "*)"}], "\.0a", "\.0a", RowBox[{"Key", " ", "=", " ", RowBox[{"PowerMod", "[", RowBox[{"e", ",", " ", "b", ",", " ", "p"}], "]"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{RowBox[{"g", "^", RowBox[{"(", "ab", ")"}]}], " ", RowBox[{"(", RowBox[{"mod", " ", "p"}], ")"}], " ", "is", " ", "now", " ", "the", " ", "Secret", " ", "Key"}], " ", "*)"}], "\.0a", "\.0a", RowBox[{"c1", " ", "=", " ", RowBox[{"PowerMod", "[", RowBox[{"g", ",", "b", ",", "p"}], "]"}]}], ";", "  ", "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"Now", ",", " ", RowBox[{"value", " ", "c1", " ", "public"}]}], " ", "*)"}], "\.0a", RowBox[{"BobValues", " ", "=", " ", RowBox[{"{", RowBox[{"c1", ",", " ", "Key"}], "}"}]}], ";", "\.0a", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", RowBox[{"\"Public Key (c1) generated: \"", ",", " ", "c1"}], "]"}], ";", "\.0a", RowBox[{"Print", "[", RowBox[{"c1", ",", " ", "\" is found with: c1 \:2261 g^b (mod p)\""}], "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Note: Bob also used private random integer value b, where a is 1 \:2264 b < p\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Bob generates Private Key using: key \:2261 e^b \:2261 (g^a)^b \:2261 g^(ab) (mod p)\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", "\.0a", RowBox[{"Return", " ", "[", "BobValues", "]"}], ";"}]}], "\.0a", "]"}]}], ";"}], RowBox[{"\.0a", "\.0a"}], RowBox[{RowBox[{RowBox[{"AliceStep3", "[", RowBox[{"c1_", ",", "a_", ",", "p_"}], "]"}], " ", ":=", " ", RowBox[{"Module", "[", RowBox[{RowBox[{"{", "Key", "}"}], ",", "\.0a", RowBox[{RowBox[{"Print", "[", "\"== Alice (Reciever) ==\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Calling function AliceStep3...\"", "]"}], ";", "\.0a", "\.0a", RowBox[{"Key", " ", "=", " ", RowBox[{"PowerMod", "[", RowBox[{"c1", ",", "a", ",", "p"}], "]"}]}], ";", "\.0a", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"Alice generates Private Key using: key \:2261 (c1)^a \:2261 (g^b)^a \:2261 g^(ab) (mod p)\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", "\.0a", RowBox[{"Return", " ", "[", "Key", "]"}], ";"}]}], "\.0a", "]"}]}], ";"}], RowBox[{"\.0a", "\.0a"}], RowBox[{RowBox[{RowBox[{"DHKE", "[", "]"}], " ", ":=", " ", RowBox[{"Module", "[", RowBox[{RowBox[{"{", RowBox[{"p", ",", "g", ",", "a", ",", "e", ",", "arr", ",", "AliceKey", ",", "SecretKey", ",", "PublicValues", ",", "BobValues", ",", "Original", ",", "rand", ",", "len", ",", "Alice", ",", "Bob", ",", "m", ",", "b", ",", "c1", ",", "c2"}], "}"}], ",", "\.0a", "\.0a", RowBox[{RowBox[{"p", " ", "=", " ", RowBox[{"RandomPrime", "[", RowBox[{"{", RowBox[{"10000", ",", "100000"}], "}"}], "]"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{"Note", ":", " ", RowBox[{"Pseudorandom", " ", "is", " ", "used"}]}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{RowBox[{"Note", ":", " ", RowBox[{"Large", " ", "primes", " ", "should", " ", "be", " ", "generated", " ", "for", " ", "best", " ", "security"}]}], ",", RowBox[{"with", " ", "hundreds", " ", "or", " ", "thousands", " ", "of", " ", "digits"}], " ", "\:2013", " ", "here", ",", " ", RowBox[{"we", " ", RowBox[{"won", "'"}], "t", " ", "do", " ", RowBox[{"that", "."}]}]}], " ", "*)"}], " ", "\.0a", "\.0a", RowBox[{"arr", " ", "=", " ", RowBox[{"PrimitiveRootList", "[", "p", "]"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{"Finds", " ", "array", " ", "of", " ", "all", " ", "primitive", " ", "roots", " ", "of", " ", "p"}], " ", "*)"}], "\.0a", RowBox[{"len", " ", "=", " ", RowBox[{"Length", "[", "arr", "]"}]}], ";", " ", RowBox[{"rand", " ", "=", " ", RowBox[{"RandomInteger", "[", "len", "]"}]}], ";", "\.0a", RowBox[{"g", " ", "=", " ", RowBox[{"arr", "[", RowBox[{"[", "rand", "]"}], "]"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{"Takes", " ", "random", " ", "primitive", " ", "root", " ", "of", " ", "p"}], " ", "*)"}], "\.0a", "\.0a", RowBox[{"(*", " ", "Values", " ", "*)"}], "\.0a", RowBox[{"PublicValues", " ", "=", " ", RowBox[{"{", RowBox[{"p", ",", "g"}], "}"}]}], ";", "\.0a", "\.0a", RowBox[{"Print", "[", "\"== Public Values (Step 0) ==\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", RowBox[{"Print", "[", RowBox[{"\"Public Keys (p, g) generated: \"", ",", " ", "PublicValues"}], "]"}], ";", "\.0a", RowBox[{"Print", "[", RowBox[{"p", ",", "\" is random prime p, and \"", ",", "g", ",", " ", "\" is random primitive root of p.\""}], "]"}], ";", " ", "\.0a", RowBox[{"Print", "[", "\"___\"", "]"}], ";", "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"All", " ", RowBox[{"Alice", "'"}], "s", " ", "values"}], " ", "*)"}], "\.0a", RowBox[{"Alice", " ", "=", " ", RowBox[{"{", RowBox[{"e", ",", "a"}], "}"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{RowBox[{"Public", ":", " ", "e"}], ";", " ", RowBox[{"Private", ":", " ", "a"}]}], " ", "*)"}], " ", "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"All", " ", RowBox[{"Bob", "'"}], "s", " ", "values"}], " ", "*)"}], "\.0a", RowBox[{"Bob", " ", "=", " ", RowBox[{"{", RowBox[{"c1", ",", "b"}], "}"}]}], ";", " ", RowBox[{"(*", " ", RowBox[{RowBox[{"Public", ":", " ", "c1"}], ";", " ", RowBox[{"Private", ":", " ", "b"}]}], " ", "*)"}], "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"Alice", " ", "generates", " ", "public", " ", "key", " ", "\"e\""}], " ", "*)"}], "\.0a", RowBox[{"e", " ", "=", " ", RowBox[{"AliceStep1", "[", RowBox[{"p", ",", "g", ",", "e", ",", "a"}], "]"}]}], ";", "\.0a", RowBox[{"(*", " ", RowBox[{"Alice", " ", "passes", " ", "\"e\"", " ", "to", " ", "Bob"}], " ", "*)"}], "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"Bob", " ", "generates", " ", "public", " ", "key", " ", "\"c1\""}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{"Bob", " ", "created", " ", "Private", " ", "Key", " ", "using", " ", "\"e\"", " ", "and", " ", "random", " ", "int", " ", "\"b\""}], " ", "*)"}], "\.0a", RowBox[{"BobValues", " ", "=", " ", RowBox[{"BobStep2", "[", RowBox[{"p", ",", "g", ",", "e"}], "]"}]}], ";", "\.0a", RowBox[{"(*", " ", RowBox[{"Bob", " ", "passes", " ", "\"c1\"", " ", "to", " ", "Alice"}], " ", "*)"}], "\.0a", RowBox[{"c1", " ", "=", " ", RowBox[{"BobValues", "[", RowBox[{"[", "1", "]"}], "]"}]}], ";", "\.0a", "\.0a", RowBox[{"(*", " ", RowBox[{"Bob", " ", "created", " ", "Private", " ", "Key", " ", "using", " ", "\"c1\"", " ", "and", " ", "random", " ", "int", " ", "\"a\""}], " ", "*)"}], "\.0a", RowBox[{"AliceKey", " ", "=", " ", RowBox[{"AliceStep3", "[", RowBox[{"c1", ",", "a", ",", "p"}], "]"}]}], ";", "\.0a", "\.0a", RowBox[{"Print", "[", RowBox[{"\"Bob's Private Key is: \"", ",", " ", RowBox[{"BobValues", "[", RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", "\.0a", RowBox[{"Print", "[", RowBox[{"\"Alice's Private Key is: \"", ",", " ", "AliceKey"}], "]"}], ";", "\.0a", "\.0a", RowBox[{"If", "[", RowBox[{RowBox[{RowBox[{"BobValues", "[", RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", "AliceKey"}], ",", " ", RowBox[{"Return", "[", "\"Same private key!\"", "]"}]}], "]"}], ";"}]}], "\.0a", "]"}]}], ";"}]}], "Input", ExpressionUUID -> "110380ef-d471-45af-84d4-d59d445776b1"], Cell[CellGroupData[{Cell[BoxData[RowBox[{RowBox[{"(*", " ", RowBox[{"Press", " ", "\"enter\"", " ", "to", " ", "see", " ", "ElGamal", " ", "Algorithm", " ", "generate", " ", "Matching", " ", "Secret", " ", RowBox[{"Keys", "."}]}], " ", "*)"}], "\.0a", RowBox[{"DHKE", "[", "]"}]}]], "Input", CellLabel -> "In[224]:= ", ExpressionUUID -> "6852fd03-3ff7-46c1-b7e2-e5da12060cfc"], Cell[BoxData["\"== Public Values (Step 0) ==\"", StandardForm], "Print", ExpressionUUID -> "d8cd542a-59da-4074-a39e-6082c5cb39be"], Cell[BoxData["\"___\"", StandardForm], "Print", ExpressionUUID -> "d3344339-8d6c-42b5-a429-1d0dc3bef958"], Cell[BoxData[InterpretationBox[RowBox[{"\"Public Keys (p, g) generated: \"", "\:f360", RowBox[{"{", RowBox[{"13103", ",", "12059"}], "}"}]}], SequenceForm["Public Keys (p, g) generated: ", {13103, 12059}], Editable -> False], StandardForm], "Print", ExpressionUUID -> "af7b0c59-a748-4cc9-bfc2-1994c0a090b3"], Cell[BoxData[InterpretationBox[RowBox[{"13103", "\:f360", "\" is random prime p, and \"", "\:f360", "12059", "\:f360", "\" is random primitive root of p.\""}], SequenceForm[13103, " is random prime p, and ", 12059, " is random primitive root of p."], Editable -> False], StandardForm], "Print", ExpressionUUID -> "2ccc6739-8425-46d6-a53e-a77641d0a9f4"], Cell[BoxData["\"___\"", StandardForm], "Print", ExpressionUUID -> "cca5768b-a1fa-4a94-80d9-0419edd5b0d5"], Cell[BoxData["\"== Alice (Reciever) ==\"", StandardForm], "Print", ExpressionUUID -> "cbc6c06b-9ec3-4314-bece-32ab56bb9e7c"], Cell[BoxData["\"Calling function AliceStep1...\"", StandardForm], "Print", ExpressionUUID -> "a4facce4-fb00-449c-bb31-cc134e1a8579"], Cell[BoxData["\"___\"", StandardForm], "Print", ExpressionUUID -> "0b9745f2-c244-48ae-ab58-2cf007a74d47"], Cell[BoxData[InterpretationBox[RowBox[{"\"Public Key (e) generated: \"", "\:f360", "8460"}], SequenceForm["Public Key (e) generated: ", 8460], Editable -> False], StandardForm], "Print", ExpressionUUID -> "f453cc21-b207-4237-a44d-ffa45ff592ec"], Cell[BoxData[InterpretationBox[RowBox[{"8460", "\:f360", "\" is found with: e \:2261 g^a (mod p)\""}], SequenceForm[8460, " is found with: e \:2261 g^a (mod p)"], Editable -> False], StandardForm], "Print", ExpressionUUID -> "1bce3ef1-936a-4c0f-954b-4b7ff17d05d1"], Cell[BoxData["\"Note: Alice also used private random integer value a, where a is 1 \:2264 a < p\"", StandardForm], "Print", ExpressionUUID -> "57b95cd4-4235-4341-acec-93c7c1f89dbc"], Cell[BoxData["\"___\"", StandardForm], "Print", ExpressionUUID -> "d5979203-c085-44eb-95c7-7d52726689c5"], Cell[BoxData["\"== Bob (Sender) ==\"", StandardForm], "Print", ExpressionUUID -> "75fa7988-e3b1-42fc-9a3e-a477fdc420e5"], Cell[BoxData["\"Calling function BobStep2...\"", StandardForm], "Print", ExpressionUUID -> "7a7ef4eb-5766-4a9d-8d8e-7b65e9b67e55"], Cell[BoxData["\"___\"", StandardForm], "Print", ExpressionUUID -> "7694ff2a-6c4a-4aa2-9051-86126eb88e14"], Cell[BoxData[InterpretationBox[RowBox[{"\"Public Key (c1) generated: \"", "\:f360", "6717"}], SequenceForm["Public Key (c1) generated: ", 6717], Editable -> False], StandardForm], "Print", ExpressionUUID -> "1eaf42a3-b13a-4392-920d-12adedde741e"], Cell[BoxData[InterpretationBox[RowBox[{"6717", "\:f360", "\" is found with: c1 \:2261 g^b (mod p)\""}], SequenceForm[6717, " is found with: c1 \:2261 g^b (mod p)"], Editable -> False], StandardForm], "Print", ExpressionUUID -> "5dca5f35-5997-4f2f-9b4f-2da938c3db75"], Cell[BoxData["\"Note: Bob also used private random integer value b, where a is 1 \:2264 b < p\"", StandardForm], "Print", ExpressionUUID -> "42d77132-cca7-4b16-9671-eac87ddd5866"], Cell[BoxData["\"\"", StandardForm], "Print", ExpressionUUID -> "9772d6a5-f7dc-4f6f-b778-2487e45b1924"], Cell[BoxData["\"Bob generates Private Key using: key \:2261 e^b \:2261 (g^a)^b \:2261 g^(ab) (mod p)\"", StandardForm], "Print", ExpressionUUID -> "aec08a7c-53c3-4cec-ac34-ae279e447789"], Cell[BoxData["\"___\"", StandardForm], "Print", ExpressionUUID -> "582b553b-c26d-4c2f-935e-4746b9ddffc0"], Cell[BoxData["\"== Alice (Reciever) ==\"", StandardForm], "Print", ExpressionUUID -> "bf4eae05-8ee7-433f-8b1c-6b9f21798255"], Cell[BoxData["\"Calling function AliceStep3...\"", StandardForm], "Print", ExpressionUUID -> "2e787ae7-550e-497c-898b-32dc117c2bd2"], Cell[BoxData["\"___\"", StandardForm], "Print", ExpressionUUID -> "07d0721c-1c68-49e6-9a9a-fff41b3ebba5"], Cell[BoxData["\"Alice generates Private Key using: key \:2261 (c1)^a \:2261 (g^b)^a \:2261 g^(ab) (mod p)\"", StandardForm], "Print", ExpressionUUID -> "ffaa2c09-b3b4-4cc8-ab17-0cd906e906c4"], Cell[BoxData["\"___\"", StandardForm], "Print", ExpressionUUID -> "6e0b211a-ce98-4845-a963-cca0a1fa3b62"], Cell[BoxData[InterpretationBox[RowBox[{"\"Bob's Private Key is: \"", "\:f360", "2075"}], SequenceForm["Bob's Private Key is: ", 2075], Editable -> False], StandardForm], "Print", ExpressionUUID -> "3b94164d-409e-4df2-99d9-10daa4275261"], Cell[BoxData[InterpretationBox[RowBox[{"\"Alice's Private Key is: \"", "\:f360", "2075"}], SequenceForm["Alice's Private Key is: ", 2075], Editable -> False], StandardForm], "Print", ExpressionUUID -> "b2037251-b937-4e72-b9c0-88a7da5823e2"], Cell[BoxData["\"Same private key!\"", StandardForm], "Output", CellLabel -> "Out[224]= ", ExpressionUUID -> "807deed7-517c-4cde-8772-aa05ee37a30a"]}, Open], ExpressionUUID -> "eda55499-b361-4905-852e-8890dbfbf087"], Cell[BoxData[RowBox[{"\.0a", RowBox[{"(*", " ", RowBox[{"===", "===", "===", "===", "===", "===", "==="}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{"Part", " ", "III", " ", "of", " ", RowBox[{"III", ":", " ", RowBox[{"Primitive", " ", "Roots", " ", "Explanation"}]}]}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{"===", "===", "===", "===", "===", "===", "==="}], " ", "*)"}], "\.0a"}]], "Input", ExpressionUUID -> "c1fb9df6-d606-4544-bb4e-27edb4d5ab59"], Cell[CellGroupData[{Cell[BoxData[RowBox[{RowBox[{"(*", " ", RowBox[{RowBox[{RowBox[{"Note", " ", "#1"}], ":", " ", RowBox[{"Primitive", " ", "roots", " ", "of", " ", "7", " ", "can", " ", "generate", " ", "the", " ", "entire", " ", "set", " ", "Zp", "*"}]}], ",", RowBox[{RowBox[{"where", " ", "we", " ", "have", " ", "p"}], "=", "7"}]}], "  ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{RowBox[{"Note", " ", "#2"}], ":", " ", RowBox[{"The", " ", "first", " ", "column", " ", "shows", " ", "the", " ", "number", " ", "we", " ", "are", " ", "checking", " ", "to", " ", "see", " ", "whether", " ", "it", " ", "is", " ", "a", " ", "primitive", " ", "root", " ", RowBox[{"(", RowBox[{"mod", " ", "7"}], ")"}]}]}], " ", "*)"}], " ", "\.0a", RowBox[{"m", " ", "=", " ", RowBox[{"Table", "[", RowBox[{RowBox[{"If", "[", RowBox[{RowBox[{"j", "==", "1"}], ",", "i", ",", RowBox[{"Mod", "[", RowBox[{RowBox[{"i", "^", RowBox[{"(", RowBox[{"j", "-", "1"}], ")"}]}], " ", ",", "7"}], "]"}]}], "]"}], ",", " ", RowBox[{"{", RowBox[{"i", ",", "7"}], "}"}], ",", RowBox[{"{", RowBox[{"j", ",", " ", "8"}], "}"}]}], "]"}]}]}]], "Input", CellLabel -> "In[225]:= ", ExpressionUUID -> "feca0ec6-3a75-472c-8782-b1cc1697934b"], Cell[BoxData[RowBox[{"{", RowBox[{RowBox[{"{", RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", RowBox[{"{", RowBox[{"2", ",", "2", ",", "4", ",", "1", ",", "2", ",", "4", ",", "1", ",", "2"}], "}"}], ",", RowBox[{"{", RowBox[{"3", ",", "3", ",", "2", ",", "6", ",", "4", ",", "5", ",", "1", ",", "3"}], "}"}], ",", RowBox[{"{", RowBox[{"4", ",", "4", ",", "2", ",", "1", ",", "4", ",", "2", ",", "1", ",", "4"}], "}"}], ",", RowBox[{"{", RowBox[{"5", ",", "5", ",", "4", ",", "6", ",", "2", ",", "3", ",", "1", ",", "5"}], "}"}], ",", RowBox[{"{", RowBox[{"6", ",", "6", ",", "1", ",", "6", ",", "1", ",", "6", ",", "1", ",", "6"}], "}"}], ",", RowBox[{"{", RowBox[{"7", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], StandardForm], "Output", CellLabel -> "Out[225]= ", ExpressionUUID -> "dd0122fe-2b07-4e77-8d68-7474b760ebf5"]}, Open], ExpressionUUID -> "b7302d5a-1653-4176-a5fb-302e1fb142e3"], Cell[BoxData[RowBox[{RowBox[{"(*", " ", RowBox[{RowBox[{RowBox[{"Note", " ", "#3"}], ":", " ", RowBox[{"Zp", "*", " ", "is", " ", "cyclic", " ", "for", " ", "prime", " ", "p"}]}], ",", " ", RowBox[{RowBox[{"since", " ", "the", " ", "set", " ", "is", " ", RowBox[{"{", RowBox[{"1", ",", " ", "...", " ", ",", RowBox[{"p", "-", "1"}]}], "}"}]}], ";", " ", RowBox[{"note", " ", "each", " ", "value", " ", "is", " ", "a", " ", "congruence", " ", "class", " ", RowBox[{RowBox[{"(", RowBox[{"mod", " ", "p"}], ")"}], ".", " ", "We"}], " ", "want", " ", "a", " ", "generator", " ", "that", " ", "can", " ", "generate", " ", "this", " ", RowBox[{"set", "."}]}]}]}], " ", "*)"}], " ", "\.0a", RowBox[{"(*", " ", RowBox[{RowBox[{"We", " ", "check", " ", "each", " ", "value", " ", "from", " ", "1", " ", "to", " ", "7.", " ", "The", " ", "exponents", " ", "we", " ", "check", " ", "go", " ", "from", " ", "0", " ", "to", " ", "7"}], ",", " ", RowBox[{"so", " ", "we", " ", "subtract", " ", "1", " ", "from", " ", "j"}], ",", " ", RowBox[{RowBox[{"since", " ", "Mathematica", " ", "indexes", " ", "from", " ", "1"}], "..."}]}], " ", "*)"}]}]], "Input", ExpressionUUID -> "86035e38-c9ff-4dac-8b3e-e0f77ee318b6"], Cell[CellGroupData[{Cell[BoxData[RowBox[{"Grid", "[", RowBox[{"m", ",", RowBox[{"Frame", " ", "\:f522", " ", "All"}]}], "]"}]], "Input", CellLabel -> "In[217]:= ", ExpressionUUID -> "b8d2d2b9-3136-428b-99ab-c2a30c9742d6"], Cell[BoxData[TagBox[GridBox[{{"1", "1", "1", "1", "1", "1", "1", "1"}, {"2", "2", "4", "1", "2", "4", "1", "2"}, {"3", "3", "2", "6", "4", "5", "1", "3"}, {"4", "4", "2", "1", "4", "2", "1", "4"}, {"5", "5", "4", "6", "2", "3", "1", "5"}, {"6", "6", "1", "6", "1", "6", "1", "6"}, {"7", "0", "0", "0", "0", "0", "0", "0"}}, AutoDelete -> False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], StandardForm], "Output", CellLabel -> "Out[217]= ", ExpressionUUID -> "7e906da2-ad34-4b8e-81e2-537509236d46"]}, Open], ExpressionUUID -> "d453dba8-7684-4f64-a527-6046e18afa00"], Cell[BoxData[RowBox[{RowBox[{"(*", " ", RowBox[{RowBox[{"We", " ", "see", " ", "3"}], ",", RowBox[{RowBox[{"5", " ", "generates", " ", "the", " ", "set", " ", "Zp", "*"}], ";", " ", RowBox[{RowBox[{"note", " ", "each", " ", "value", " ", "is", " ", "a", " ", "congruence", " ", "class", " ", RowBox[{RowBox[{"(", RowBox[{"mod", " ", "p"}], ")"}], ".", " ", "For"}], " ", "p"}], "=", "7"}]}], ",", " ", RowBox[{"that", " ", "is", " ", "Zp", "*"}], ",", " ", RowBox[{"so", " ", "we", " ", "have", " ", "found", " ", "the", " ", "correct", " ", RowBox[{"set", "."}]}]}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{RowBox[{"We", " ", "also", " ", "see", " ", "that", " ", "1", " ", "and", " ", "3", " ", "do", " ", "not", " ", "generate", " ", "Zp", "*"}], ",", " ", RowBox[{"so", " ", "these", " ", "are", " ", "not", " ", "primitive", " ", "roots", " ", RowBox[{RowBox[{"(", RowBox[{"mod", " ", "7"}], ")"}], "."}]}]}], " ", "*)"}]}]], "Input", ExpressionUUID -> "b47bb11e-fd0b-46e9-925e-301012eb9f6a"], Cell[CellGroupData[{Cell[BoxData[RowBox[{"PrimitiveRootList", "[", "7", "]"}]], "Input", CellLabel -> "In[228]:= ", ExpressionUUID -> "90e06fcd-09ad-4d34-8a30-b5ee5e207049"], Cell[BoxData[RowBox[{"{", RowBox[{"3", ",", "5"}], "}"}], StandardForm], "Output", CellLabel -> "Out[228]= ", ExpressionUUID -> "9c7a4eb6-c013-4df3-9fca-9ef9fca83832"]}, Open], ExpressionUUID -> "24d3cf8b-0ce0-46dc-90b8-2e038fa65ace"], Cell[BoxData[RowBox[{RowBox[{"(*", " ", RowBox[{RowBox[{RowBox[{"Note", " ", "#1"}], ":", " ", RowBox[{"Primitive", " ", "roots", " ", "of", " ", "3", " ", "can", " ", "generate", " ", "the", " ", "entire", " ", "set", " ", "Zp", "*"}]}], ",", RowBox[{RowBox[{"where", " ", "we", " ", "have", " ", "p"}], "=", "3"}]}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{RowBox[{"Note", " ", "#2"}], ":", " ", RowBox[{"The", " ", "first", " ", "column", " ", "shows", " ", "the", " ", "number", " ", "we", " ", "are", " ", "checking", " ", "to", " ", "see", " ", "whether", " ", "it", " ", "is", " ", "a", " ", "primitive", " ", "root", " ", RowBox[{"(", RowBox[{"mod", " ", "3"}], ")"}]}]}], " ", "*)"}], " "}]], "Input", ExpressionUUID -> "debc706b-8e5a-47ec-953b-13f6e74bb647"], Cell[CellGroupData[{Cell[BoxData[RowBox[{"l", " ", "=", " ", RowBox[{"Table", "[", RowBox[{RowBox[{"If", "[", RowBox[{RowBox[{"j", "==", "1"}], ",", "i", ",", RowBox[{"Mod", "[", RowBox[{RowBox[{"i", "^", RowBox[{"(", RowBox[{"j", "-", "1"}], ")"}]}], " ", ",", "3"}], "]"}]}], "]"}], ",", " ", RowBox[{"{", RowBox[{"i", ",", "3"}], "}"}], ",", RowBox[{"{", RowBox[{"j", ",", " ", "4"}], "}"}]}], "]"}]}]], "Input", CellLabel -> "In[226]:= ", ExpressionUUID -> "068a4191-d403-493f-ad49-d55cb3ea028f"], Cell[BoxData[RowBox[{"{", RowBox[{RowBox[{"{", RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", RowBox[{"{", RowBox[{"2", ",", "2", ",", "1", ",", "2"}], "}"}], ",", RowBox[{"{", RowBox[{"3", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], StandardForm], "Output", CellLabel -> "Out[226]= ", ExpressionUUID -> "19bc6a4a-9fc4-45c8-a5f2-95665211a172"]}, Open], ExpressionUUID -> "c9235d9e-f603-489b-bc32-bd7b3a9afa3b"], Cell[BoxData[RowBox[{RowBox[{"(*", " ", RowBox[{RowBox[{RowBox[{"Note", " ", "#3"}], ":", " ", RowBox[{"Zp", "*", " ", "is", " ", "cyclic", " ", "for", " ", "prime", " ", "p"}]}], ",", " ", RowBox[{RowBox[{"since", " ", "the", " ", "set", " ", "is", " ", RowBox[{"{", RowBox[{"1", ",", " ", "...", " ", ",", RowBox[{"p", "-", "1"}]}], "}"}]}], ";", " ", RowBox[{"note", " ", "each", " ", "value", " ", "is", " ", "a", " ", "congruence", " ", "class", " ", RowBox[{RowBox[{"(", RowBox[{"mod", " ", "p"}], ")"}], ".", " ", "We"}], " ", "want", " ", "a", " ", "generator", " ", "that", " ", "can", " ", "generate", " ", "this", " ", RowBox[{"set", "."}]}]}]}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{RowBox[{"We", " ", "check", " ", "each", " ", "value", " ", "from", " ", "1", " ", "to", " ", "3.", " ", "The", " ", "exponents", " ", "we", " ", "check", " ", "go", " ", "from", " ", "0", " ", "to", " ", "3"}], ",", " ", RowBox[{"so", " ", "we", " ", "subtract", " ", "1", " ", "from", " ", "j"}], ",", RowBox[{RowBox[{"since", " ", "Mathematica", " ", "indexes", " ", "from", " ", "1"}], "..."}]}], " ", "*)"}]}]], "Input", ExpressionUUID -> "d39310d4-630c-43cd-a1b7-b89d36950276"], Cell[CellGroupData[{Cell[BoxData[RowBox[{"Grid", "[", RowBox[{"l", ",", RowBox[{"Frame", " ", "\:f522", " ", "All"}]}], "]"}]], "Input", CellLabel -> "In[227]:= ", ExpressionUUID -> "78d36195-ff08-45b7-ac74-470ea0062b1c"], Cell[BoxData[TagBox[GridBox[{{"1", "1", "1", "1"}, {"2", "2", "1", "2"}, {"3", "0", "0", "0"}}, AutoDelete -> False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], StandardForm], "Output", CellLabel -> "Out[227]= ", ExpressionUUID -> "9209e19c-dd0e-46f5-b1e4-df141addfb26"]}, Open], ExpressionUUID -> "e5e0c3c3-7e1b-4c16-9b26-948bca1e6f30"], Cell[BoxData[RowBox[{RowBox[{"(*", " ", RowBox[{RowBox[{RowBox[{"We", " ", "see", " ", "2", " ", "generates", " ", "the", " ", "set", " ", RowBox[{"{", RowBox[{"2", ",", " ", "1", ",", " ", "2"}], "}"}]}], ";", " ", RowBox[{RowBox[{"note", " ", "each", " ", "value", " ", "is", " ", "a", " ", "congruence", " ", "class", " ", RowBox[{RowBox[{"(", RowBox[{"mod", " ", "p"}], ")"}], ".", " ", "For"}], " ", "p"}], "=", "3"}]}], ",", " ", RowBox[{"that", " ", "is", " ", "Zp", "*"}], ",", " ", RowBox[{"so", " ", "we", " ", "have", " ", "found", " ", "the", " ", "correct", " ", RowBox[{"set", "."}]}]}], " ", "*)"}], "\.0a", RowBox[{"(*", " ", RowBox[{RowBox[{"We", " ", "also", " ", "see", " ", "that", " ", "1"}], ",", "2", ",", "4", ",", "6", ",", RowBox[{"7", " ", "do", " ", "not", " ", "generate", " ", "Zp", "*"}], ",", " ", RowBox[{"so", " ", "these", " ", "are", " ", "not", " ", "primitive", " ", "roots", " ", RowBox[{RowBox[{"(", RowBox[{"mod", " ", "7"}], ")"}], "."}]}]}], " ", "*)"}], " "}]], "Input", ExpressionUUID -> "07e38e67-55d1-4278-822a-dbdc5cc2138d"], Cell[CellGroupData[{Cell[BoxData[RowBox[{"PrimitiveRootList", "[", "3", "]"}]], "Input", CellLabel -> "In[221]:= ", ExpressionUUID -> "ebc8c448-2d36-4ffa-ae50-62d1917b4540"], Cell[BoxData[RowBox[{"{", "2", "}"}], StandardForm], "Output", CellLabel -> "Out[221]= ", ExpressionUUID -> "7a768500-b5c7-42d6-bb66-9977c99a7d47"]}, Open], ExpressionUUID -> "67f9ee92-7dae-4a13-a34d-015655462d3e"]}, StyleDefinitions -> "Default.nb", FrontEndVersion -> "13.2 for Wolfram Cloud 1.64.1 (November 30, 2022)"]